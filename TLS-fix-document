**ESMS Observation:**
Initial testing and observation from the ESMS team:
As per our observation, we tried upgrading the Vault version to 1.18.4v, but UI access remained inaccessible. We conducted testing by upgrading the cluster with the following sequence of versions:

- 1.18.3v - Not worked
- 1.18.4v - Not worked
- 1.16.3v - Worked
- 1.17.0v - Worked
- 1.18.0v - Not Worked
- 1.17.11v - Not Worked
- 1.17.1v - Worked
- 1.17.2v - Worked
- 1.17.3v - Not worked

**Note:** Tested in the performance cluster of the SBX environment.
We stopped our testing at version 1.17.3v as UI access was no longer working.

Could you please share your observations? Was there any major change after version 1.17.3v? Please advise us.

---

**HashiCorp Recommendation:**
Based on our test results and HashiCorp’s analysis, the issue appears to be related to TLS 1.2 negotiation failing due to incompatible cipher suites.

**Problem Statement:** TLS 1.2 negotiation failing.

**Test results with ELBSecurityPolicy-2016-08 and Vault versions:**

- 1.18.4v - Not working
- 1.18.3v - Not working
- 1.18.0v - Not Working
- 1.17.11v - Not Working
- 1.17.3v - Not working
- 1.17.2v - Working
- 1.17.1v - Working
- 1.17.0v - Working
- 1.16.3v - Working

The issue appears to stem from Go version changes in later Vault releases affecting TLS behavior.

**Recommended Actions:**
- Update the ELB security policy to `ELBSecurityPolicy-TLS-1-2-2017-01`.
- Set `tls_max_version` property to `tls12` in Vault.
- Manually specify cipher suites in Vault’s configuration to ensure compatibility.

**References:**
- AWS ELB Security Policy Update: [AWS Docs](https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/ssl-config-update.html)
- Vault TLS Configuration: [Vault Docs](https://developer.hashicorp.com/vault/docs/configuration/listener/tcp#tls_min_version)
- HashiCorp TLS Issue Documentation: [Support Article](https://support.hashicorp.com/hc/en-us/articles/31348370232595-Vault-TLS-errors-client-offered-only-unsupported-versions-no-cipher-suite-supported)

---

**Solution Proposed:**
To resolve the issue before upgrading the production cluster to 1.18.4v, we propose the following:

- Set `tls_max_version = tls12` in Vault’s configuration.
- Configure Vault to explicitly specify compatible cipher suites:
  ```
  tls_cipher_suites = "TLS_RSA_WITH_AES_256_GCM_SHA384, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_AES_128_GCM_SHA256, TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_AES_128_GCM_SHA256, TLS_AES_256_GCM_SHA384"
  ```
- Ensure ELB Security Policy is updated to `ELBSecurityPolicy-TLS-1-2-2017-01`.
- Conduct additional validation testing in the performance cluster before rolling out changes to production.

---

**ESMS Performed Steps:**
1. Conducted multiple tests across different Vault versions.
2. Identified that the issue is related to TLS negotiation.
3. Engaged HashiCorp support for further analysis.
4. Implemented recommended configuration changes in the test environment.
5. Verified that the issue is resolved by manually specifying cipher suites and updating the ELB security policy.

---

**Takeaway for Production Upgrade:**
- The TLS issue can be mitigated by explicitly specifying cipher suites in the Vault configuration.
- The `ELBSecurityPolicy-2016-08` policy may not be fully compatible with Vault versions beyond 1.17.2v.
- Upgrading to `ELBSecurityPolicy-TLS-1-2-2017-01` should be evaluated based on client compatibility needs.
- Further testing in the performance environment is required before proceeding with the production upgrade.
- Security teams should review cipher suites to align with organizational security policies.

---

**Next Steps:**
- Validate the proposed solution in a staging environment.
- Obtain approval from security and compliance teams.
- Proceed with the production upgrade following the validated steps.

