import boto3
from datetime import datetime, timedelta

cloudwatch = boto3.client('cloudwatch')

def get_5xx_metrics(start_time, end_time, load_balancer_name):
    # Add debugging to check load balancer name and time range
    print(f"Querying 5XX errors for load balancer: {load_balancer_name}")
    print(f"Start Time: {start_time}, End Time: {end_time}")
    
    # Get metrics from CloudWatch
    response = cloudwatch.get_metric_data(
        MetricDataQueries=[
            {
                'Id': 'http5xx',
                'MetricStat': {
                    'Metric': {
                        'Namespace': 'AWS/ELB',
                        'MetricName': 'HTTPCode_Backend_5XX',
                        'Dimensions': [
                            {'Name': 'LoadBalancerName', 'Value': load_balancer_name}
                        ]
                    },
                    'Period': 3600,  # Data aggregated by hour
                    'Stat': 'Sum'
                },
                'ReturnData': True
            }
        ],
        StartTime=start_time,
        EndTime=end_time,
        ScanBy='TimestampDescending'
    )
    
    # Print out the raw response for debugging purposes
    print(f"CloudWatch Response: {response}")
    
    # Sum the 'Values' from the metric results
    total_5xx = 0
    for result in response['MetricDataResults']:
        if result['Id'] == 'http5xx' and 'Values' in result:
            total_5xx += sum(result['Values'])  # Sum all the values in 'Values'
    
    print(f"Total 5XX Errors: {total_5xx}")
    return total_5xx

def lambda_handler(event, context):
    # Set the time range for the last 7 days (to test shorter period)
    start_time = datetime.utcnow() - timedelta(days=7)
    end_time = datetime.utcnow()

    # Specify your load balancer name (ensure this is the correct format for ELB)
    load_balancer_name = 'my-classic-elb'  # Replace with actual Classic ELB name

    # Get the 5XX metrics from CloudWatch
    five_hundred_errors = get_5xx_metrics(start_time, end_time, load_balancer_name)

    # Return the response
    return {
        "statusCode": 200,
        "body": {
            "5xx_count": five_hundred_errors
        }
    }
