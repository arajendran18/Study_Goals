import hvac
import boto3
from botocore.exceptions import NoCredentialsError, PartialCredentialsError, ClientError

# Step 1: Initialize the Vault client
vault_client = hvac.Client(
    url='http://127.0.0.1:8200',  # Replace with your Vault address
)

# Step 2: Authenticate to Vault using a token
vault_client.token = 's.your_vault_token'  # Replace with your Vault token

# Verify authentication
if vault_client.is_authenticated():
    print("Successfully authenticated to Vault")
else:
    print("Authentication failed")
    exit()

# Step 3: Read AWS credentials from Vault's AWS secret engine
aws_secret_path = 'aws/creds/my-role'  # Replace with your AWS secret engine path

try:
    aws_secrets = vault_client.secrets.aws.generate_credentials(name=aws_secret_path)
    access_key = aws_secrets['data']['access_key']
    secret_key = aws_secrets['data']['secret_key']
    print("AWS credentials retrieved from Vault")
except Exception as e:
    print(f"Failed to retrieve AWS credentials: {e}")
    exit()

# Step 4: Validate the AWS credentials by performing an AWS operation (e.g., listing S3 buckets)
try:
    # Initialize the Boto3 client with the retrieved credentials
    s3_client = boto3.client(
        's3',
        aws_access_key_id=access_key,
        aws_secret_access_key=secret_key,
    )

    # Attempt to list S3 buckets
    buckets = s3_client.list_buckets()
    print("Successfully listed S3 buckets. AWS secret engine is working correctly.")
    print(f"Buckets: {[bucket['Name'] for bucket in buckets['Buckets']]}")

except (NoCredentialsError, PartialCredentialsError) as cred_err:
    print(f"Credential error: {cred_err}")
except ClientError as client_err:
    print(f"AWS Client error: {client_err}")
except Exception as e:
    print(f"Failed to validate AWS credentials: {e}")
    exit()

# Step 5: Logout from Vault (optional)
vault_client.logout()
print("Logged out from Vault")
