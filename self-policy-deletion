def create_vault_policy(vault_url, vault_token, policy_name, mount_paths):
    """Create a Vault policy dynamically for AWS secret engines."""
    headers = {
        'X-Vault-Token': vault_token
    }

    # Initialize policy content
    policy_content = ''

    # Create paths based on the provided mount paths
    creds_paths = set()
    roles_paths = set()
    for path in mount_paths:
        creds_paths.add(f'{path}/creds/*')
        roles_paths.add(f'{path}/roles/*')

    # Add paths for creds with additional "update" capability
    for path in sorted(creds_paths):
        policy_content += f'path "{path}" {{\n'
        policy_content += '  capabilities = ["read", "list", "update"]\n'
        policy_content += '}\n\n'

    # Add paths for roles
    for path in sorted(roles_paths):
        policy_content += f'path "{path}" {{\n'
        policy_content += '  capabilities = ["read", "list"]\n'
        policy_content += '}\n\n'

    # Add the path for sys/mounts with read capability
    policy_content += 'path "sys/mounts" {\n'
    policy_content += '  capabilities = ["read"]\n'
    policy_content += '}\n\n'

    # Add the path for auth/token/lookup-self with read capability
    policy_content += 'path "auth/token/lookup-self" {\n'
    policy_content += '  capabilities = ["read"]\n'
    policy_content += '}\n\n'

    # Add the path for sys/mounts/aws-dev with read capability
    policy_content += 'path "sys/mounts/aws-dev" {\n'
    policy_content += '  capabilities = ["read"]\n'
    policy_content += '}\n\n'

    # Add the path for sys/mounts/aws with read capability
    policy_content += 'path "sys/mounts/aws" {\n'
    policy_content += '  capabilities = ["read"]\n'
    policy_content += '}\n\n'

    # Add the path for self-deletion of the dynamic policy
    policy_content += f'path "sys/policies/acl/{policy_name}" {{\n'
    policy_content += '  capabilities = ["delete"]\n'
    policy_content += '}\n'

    # Write the policy to Vault
    policy_data = {
        'policy': policy_content.strip()  # Strip trailing newline
    }
    response = requests.put(f'{vault_url}/v1/sys/policies/acl/{policy_name}', headers=headers, json=policy_data)
    
    if response.status_code != 204:
        raise Exception(f"Error creating Vault policy: {response.text}")

