Here are the **correct** and **wrong** usage examples for each of the 11 common Vault errors:

---

### **1. Typo in Vault Path**  
- **Description:**  
  Users often mistype Vault paths, leading to errors when trying to access secrets. Vault paths are case-sensitive and must be accurate.

- **Correct Usage:**
  ```bash
  vault read aws/creds/my-role
  ```
- **Wrong Usage:**
  ```bash
  vault read aws/cred/my-role  # 'cred' instead of 'creds'
  ```

---

### **2. Incorrect Slash Usage**  
- **Description:**  
  Using trailing slashes incorrectly can cause Vault to misinterpret paths or behave unexpectedly.

- **Correct Usage:**
  ```bash
  vault read aws/creds/my-role  # No trailing slash unless listing sub-paths
  ```
- **Wrong Usage:**
  ```bash
  vault read aws/creds/my-role/  # Trailing slash used unnecessarily
  ```

---

### **3. Wrong Role Name**  
- **Description:**  
  Using an incorrect role name (e.g., `myrole` instead of `my-role`) when accessing AWS secrets or roles will result in a failure to authenticate or fetch credentials.

- **Correct Usage:**
  ```bash
  vault read aws/creds/my-role
  ```
- **Wrong Usage:**
  ```bash
  vault read aws/creds/myrole  # Incorrect role name
  ```

---

### **4. Wrong Environment URL**  
- **Description:**  
  Using the wrong Vault environment URL (e.g., using the non-production URL for production) leads to accessing the wrong configuration or secrets.

- **Correct Usage:**
  ```bash
  export VAULT_ADDR="http://vault-prd.example.com:8200"
  vault read aws/creds/my-role  # Correct Vault URL for production
  ```
- **Wrong Usage:**
  ```bash
  export VAULT_ADDR="http://vault-npd.example.com:8200"
  vault read aws/creds/my-role  # Wrong Vault URL (non-production for production tasks)
  ```

---

### **5. Incorrect Authentication Role**  
- **Description:**  
  Using the wrong Vault authentication role (e.g., `esms-npd-lambda-aws-secret-validation` for production) causes authentication failure.

- **Correct Usage:**
  ```bash
  vault auth login -method=aws role=esms-prd-lambda-aws-secret-validation
  ```
- **Wrong Usage:**
  ```bash
  vault auth login -method=aws role=esms-npd-lambda-aws-secret-validation  # Non-production role in production
  ```

---

### **6. Using Expired Token**  
- **Description:**  
  Tokens have a limited TTL (Time To Live), and once expired, they cause authentication failures.

- **Correct Usage:**
  ```bash
  vault token lookup  # Check token validity
  ```
- **Wrong Usage:**
  ```bash
  vault read aws/creds/my-role  # Using expired token without checking
  ```

---

### **7. Incorrect IAM Authentication**  
- **Description:**  
  If IAM credentials or metadata are incorrectly configured, Vault will fail to authenticate.

- **Correct Usage:**
  ```bash
  vault auth enable aws
  vault write auth/aws/role/my-role auth_type="iam" policies="default"
  ```
- **Wrong Usage:**
  ```bash
  vault auth enable aws
  vault write auth/aws/role/my-role auth_type="incorrect"  # Wrong auth_type
  ```

---

### **8. Insufficient Permissions for Path**  
- **Description:**  
  When a Vault role does not have the necessary permissions for a path, users receive a `403 Forbidden` error.

- **Correct Usage:**
  ```bash
  vault read aws/creds/my-role  # Ensure role has permission to read from this path
  ```
- **Wrong Usage:**
  ```bash
  vault read aws/creds/my-role  # Role doesn't have permission (403 Forbidden)
  ```

---

### **9. Unsupported Auth Method**  
- **Description:**  
  Attempting to use an unsupported or unconfigured authentication method (e.g., GitHub when only AppRole is enabled) will result in authentication failure.

- **Correct Usage:**
  ```bash
  vault auth enable approle
  vault login -method=approle role_id="your-role-id" secret_id="your-secret-id"
  ```
- **Wrong Usage:**
  ```bash
  vault auth enable github
  vault login -method=github  # GitHub auth not enabled
  ```

---

### **10. Missing Secrets Engine Mount**  
- **Description:**  
  Attempting to access secrets from an engine that is not mounted will result in an error.

- **Correct Usage:**
  ```bash
  vault secrets enable -path=aws aws
  vault read aws/creds/my-role  # Ensure the AWS secrets engine is enabled
  ```
- **Wrong Usage:**
  ```bash
  vault read aws/creds/my-role  # Engine not mounted (404 Not Found)
  ```

---

### **11. Incorrect Payload Structure**  
- **Description:**  
  Sending an invalid JSON payload structure can result in errors or incorrect behavior.

- **Correct Usage:**
  ```bash
  vault write aws/creds/my-role access_key="AKIA..." secret_key="SECRET_KEY"  # Valid JSON structure
  ```
- **Wrong Usage:**
  ```bash
  vault write aws/creds/my-role access_key="AKIA..."  # Missing required secret_key
  ```

---

Each point above shows how small mistakes in usage (such as incorrect syntax or path) can lead to authentication or access issues in Vault. Itâ€™s important to follow the correct format for each interaction to ensure smooth operation.
